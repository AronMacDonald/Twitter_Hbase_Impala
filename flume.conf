# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# The configuration file needs to define the sources, 
# the channels and the sinks.
# Sources, channels and sinks are defined per agent, 
# in this case called 'TwitterAgent'

TwitterAgent.sources = Twitter
TwitterAgent.channels = MemChannel #logChannel
TwitterAgent.sinks = HDFS logHbaseCommonHostname

TwitterAgent.sources.Twitter.type = com.cloudera.flume.source.TwitterSource
TwitterAgent.sources.Twitter.channels = MemChannel
TwitterAgent.sources.Twitter.consumerKey = 
TwitterAgent.sources.Twitter.consumerSecret = 
TwitterAgent.sources.Twitter.accessToken = 
TwitterAgent.sources.Twitter.accessTokenSecret = 
TwitterAgent.sources.Twitter.keywords = sap hana, cloudera impala, hadoop, big data, analytics, bigdata, cloudera, data science, data scientest, business intelligence, mapreduce, data warehouse, data warehousing, mahout, hbase, nosql, newsql, businessintelligence, cloudcomputing, horton works, hortonworks

## Original Clouder lines writing to HDFS (SINK)
#TwitterAgent.sinks.HDFS.channel = MemChannel
#TwitterAgent.sinks.HDFS.type = hdfs
#TwitterAgent.sinks.HDFS.hdfs.path = hdfs://ip-XX-XXX-XXX-XX:8020/user/flume/tweets/%Y/%m/%d/%H/
#TwitterAgent.sinks.HDFS.hdfs.fileType = DataStream
#TwitterAgent.sinks.HDFS.hdfs.writeFormat = Text
#TwitterAgent.sinks.HDFS.hdfs.batchSize = 1000
#TwitterAgent.sinks.HDFS.hdfs.rollSize = 0
#TwitterAgent.sinks.HDFS.hdfs.rollCount = 10000

## New Logic writing to HBASE (SINK)
TwitterAgent.sinks.logHbaseCommonHostname.channel = MemChannel
TwitterAgent.sinks.logHbaseCommonHostname.type = org.apache.flume.sink.hbase.AsyncHBaseSink
TwitterAgent.sinks.logHbaseCommonHostname.table = tweets
TwitterAgent.sinks.logHbaseCommonHostname.columnFamily = tweet
TwitterAgent.sinks.logHbaseCommonHostname.batchSize = 5000
#TwitterAgent.sinks.logHbaseCommonHostname.serializer = com.hbase.log.util.AsyncHbaseLogEventSerializer
TwitterAgent.sinks.logHbaseCommonHostname.serializer = flume_hdfs.hbase.util.AsyncHbaseTwitterEventSerializer 
TwitterAgent.sinks.logHbaseCommonHostname.serializer.columns = tweet:id,tweet:created_at,tweet:source,tweet:favourited,tweet:text
TwitterAgent.sinks.logHbaseCommonHostname.serializer.delimiter = \\t

## HANA outputsettings
TwitterAgent.sinks.logHbaseCommonHostname.serializer.hanaServer = ec2-XX-XXX-XXX-XXX.compute-1.amazonaws.com
TwitterAgent.sinks.logHbaseCommonHostname.serializer.xsPort = 8000
TwitterAgent.sinks.logHbaseCommonHostname.serializer.xsJs = /test1/Test1/insertTweet.xsjs
// Need Hana userid and password for xsJS statement
// below are the defaults, suggest you create a custom userid and profile for xsJS.
// Alternatively investigate more secure methods for storing if sending system is not secure.
TwitterAgent.sinks.logHbaseCommonHostname.serializer.hUser = SYSTEM
TwitterAgent.sinks.logHbaseCommonHostname.serializer.hPass = manager


TwitterAgent.channels.MemChannel.type = memory
TwitterAgent.channels.MemChannel.capacity = 10000
TwitterAgent.channels.MemChannel.transactionCapacity = 100
